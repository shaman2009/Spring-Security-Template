<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/security   
    http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<context:property-placeholder
		location="classpath:jdbc.properties,classpath:jms.properties" />

	<context:component-scan base-package="com.oosic.webservice" />

	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->

	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />


	<mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" />

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views 
		directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为1MB -->
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>


	<!-- configure data sources_OoPassUser -->
	<bean id="OoPassUser_dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${jdbc.oopassuser.url}" />
		<property name="user" value="${jdbc.oopassuser.username}" />
		<property name="password" value="${jdbc.oopassuser.password}" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="maxIdleTime" value="3600" />
	</bean>
	<bean id="OoPassUser_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="OoPassUser_dataSource" />
		<property name="mapperLocations"
			value="classpath:com/oosic/webservice/mybatis/data/*.xml" />
		<property name="typeHandlers">
			<list>
				<ref bean="UUIDTypeHandler" />
			</list>
		</property>
		<property name="typeAliases">
			<list>
				<value>com.oosic.webservice.mybatis.typehandlers.UUIDTypeHandler
				</value>
			</list>
		</property>
	</bean>
	<bean id="OoPassUser_mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.oosic.webservice.mybatis.data" />
		<property name="sqlSessionFactory" ref="OoPassUser_sqlSessionFactory" />
	</bean>
	<tx:annotation-driven />
	<!-- configure interceptors -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.oosic.webservice.interceptors.DebugDumpInterceptor">
				<property name="enable" value="true" />
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean
				class="com.oosic.webservice.interceptors.RequestTimeCalculatorInterceptor">
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- configure exception resolvers -->
	<bean
		class="com.oosic.webservice.exception.resolver.SpringTemplateErrorResolver">
		<property name="enable" value="true" />
	</bean>
	<bean id="UUIDTypeHandler"
		class="com.oosic.webservice.mybatis.typehandlers.UUIDTypeHandler"></bean>

	<!-- config active-mq jms -->


	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${jms.broker.url}" />
		<property name="useAsyncSend" value="true" />
	</bean>

	<bean id="outgingDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${jms.outgoing.des}"></constructor-arg>
	</bean>

	<bean id="incomingDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${jms.incoming.des}"></constructor-arg>
	</bean>


	<!-- <bean id="connectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean"> -->
	<!-- <property name="jndiName" value="${jms.jndi.connectionfactory}"></property> -->
	<!-- </bean> -->

	<!-- <bean id="outgingDestination" class="org.springframework.jndi.JndiObjectFactoryBean"> -->
	<!-- <property name="jndiName" value="${jms.outgoing.destination}"></property> -->
	<!-- </bean> -->

	<!-- <bean id="incomingDestination" class="org.springframework.jndi.JndiObjectFactoryBean"> -->
	<!-- <property name="jndiName" value="${jms.incoming.destination}"></property> -->
	<!-- </bean> -->

	<bean id="incomingTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory"></property>
		<property name="defaultDestination" ref="incomingDestination"></property>
		<property name="receiveTimeout" value="${jms.receive.timeout}"></property>
		<qualifier value="incoming" />
	</bean>

	<bean id="outgoingTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory"></property>
		<property name="defaultDestination" ref="outgingDestination"></property>
		<property name="receiveTimeout" value="${jms.receive.timeout}"></property>
		<qualifier value="outgoing" />
	</bean>


	<!-- Spring Security -->

	<security:http auto-config="true" use-expressions="true"
		access-denied-page="/auth/denied">
		<security:intercept-url pattern="/auth/login"
			access="permitAll" />
		<security:intercept-url pattern="/"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/main/admin"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/main/common"
			access="hasRole('ROLE_USER')" />
		<security:form-login login-page="/auth/login"
			authentication-failure-url="/auth/login?error=true"
			default-target-url="/main/common" />
		<security:logout invalidate-session="true"
			logout-success-url="/auth/login" logout-url="/auth/logout" />
	</security:http>

	<!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>
	<!-- 对密码进行MD5编码 -->
	<bean
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
		id="passwordEncoder" />
	<!-- 通过 customUserDetailsService,Spring会自动的用户的访问级别. 也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联. -->
	<bean id="customUserDetailsService" class="com.oosic.webservice.security.CustomUserDetailsService" />
</beans>














